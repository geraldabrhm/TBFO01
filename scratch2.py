# from cyk import terminals

# terminals.append("ada")
# print(terminals)
# A = 5
# if type(A) == int:
#   print("berhasil")

a = ["SEC",   "IF",  "SEC", "DEF", "SEC", "IMPORT", "SEC", "WITH", "SEC", "CLASS", "SEC", "WHILE", "SEC", "FOR", "SEC", "IF", "IFF", "TAIL", "DEF", "DEF_VARIABLE_PARAM", "STATEMENT_RETURN", "DEF_VARIABLE_PARAM", "STATEMENT", "IMPORT",  "FROM_IMPORT_VARIABLE", "AS", "FROM", "IMPORT_VARIABLE", "IMPORT_VARIABLE", "AS", "IMPORTT", "VARIABLE", "WITH", "WITH_FUNCTION_AS_VARIABLE:", "STATEMENT", "CLASS", "CLASS_VARIABLE_PARAM" "SECCLASS" , "WHILE", "WHILEF", "CONTENTLOOP",  "FOR", "FOR_VARIABLE_IN_SEQUENCE", ":CONTENTLOOP", "STATEMENT", "PASS", "STATEMENT", "FUNCTIONCALL", "STATEMENT", "ASSIGNMENT", "STATEMENT", "IF", "STATEMENT", "WHILE", "STATEMENT", "FOR", "STATEMENT", "ASSIGNMENT", "VARIABLE_ASSIGN", "VALUE", "FUNCTIONCALL", "VARIABLE", "(ARGUMENTSOFFUNCCALL)", "VARIABLE", "()", "IF", "IFF", "TAIL", "WHILE", "WHILEF" "CONTENTLOOP" , "FOR", "FOR_VARIABLE_IN_SEQUENCE",  ":CONTENTLOOP", "CONTENTLOOP", "PASS", "CONTENTLOOP", "FUNCTIONCALL", "CONTENTLOOP", "ASSIGNMENT", "CONTENTLOOP", "IF", "CONTENTLOOP", "WHILE", "CONTENTLOOP", "FOR", "CONTENTLOOP", "BREAK", "CONTENTLOOP", "CONTINUE", "CONTENTLOOP", "ASSIGNMENT", "VARIABLE_ASSIGN", "VALUE", "FUNCTIONCALL", "VARIABLE", "(ARGUMENTSOFFUNCCALL)", "VARIABLE", "()" , "IF", "IFF", "TAIL", "WHILE", "WHILEF", "CONTENTLOOP", "FOR", "FOR_VARIABLE_IN_SEQUENCE", ":CONTENTLOOP", "FUNCTIONCALL", "VARIABLE", "(ARGUMENTSOFFUNCCALL)", "VARIABLE", "()", "(ARGUMENTSOFFUNCCALL)", "OPENARGUMENTSOFFUNCCALL", "CLOSE", "(ARGUMENTSOFFUNCCALL", "OPEN", "ARGUMENTSOFFUNCCALL", "ARGUMENTSOFFUNCCALL", "DATA", "LOOPFUNC", "DATA", "LOOPFUNC", "COMMA_DATA", "LOOPFUNC", "COMMA", "DATA", "COMMA_DATA", "ARGUMENTSOFFUNC",  "VARIABLE", "LOOPFUNCDEF", "VARIABLE", "LOOPFUNCDEF", "COMMA_VARIABLE", "LOOPFUNCDEF", "COMMA_VARIABLE", "COMMA", "VARIABLE", "DATA", "INT", "STRING", "VARIABLE", "BOOLEAN", "NONE", "FUNCTIONCALL", "DATANOSTRINGNONONE",  "DATANONONE", "ASSIGNMENT",  "VARIABLE_ASSIGN", "VALUE", "ASSIGN", "RETURN", "RET", "DATANOSTRINGNONONE_OPERATOR", "OPERATOR", "BOOLEANBASE", "FUNCTIONCALL", "(ARGUMENTSOFFUNCCALL)", "BOOLOPERATOR", "NOT_(DATA)_LOGIC",  "NOT_(DATA)", "(DATA)_LOGIC",  "NOT_(DATA)", "NOT_(DATA)_LOGIC", "(DATA)", "(DATA)_LOGIC", "(DATA)", "‘NOT_DATA_LOGIC", "NOT_(DATA)", "NOT_DATA_LOGIC", "(DATA)", "DATA_LOGIC",  "NOT_(DATA)", "DATA_LOGIC", "NOT_DATA", "(DATA)_LOGIC", "NOT_DATA", "NOT_(DATA)_LOGIC", "DATA", "(DATA)_LOGIC DATA", " NOT_DATA_LOGIC", "NOT_DATA", "DATA_LOGIC", "NOT_DATA", "NOT_DATA_LOGIC", "DATA", "DATA_LOGIC", "IS", "VARIABLE_IS", "NOT_VARIABLE", "VARIABLE_IS", "(NOT VARIABLE)", "VARIABLE_IS", "VARIABLE", "VARIABLE_IS", "(VARIABLE)", "ORAND", "BOOLEAN_ORAND", "BOOLEAN", "BOOLOPERATOR", "NOT_(DATA)_LOGIC", "NOT_(DATA)", "(DATA)_LOGIC", "NOT_(DATA)", "NOT_(DATA)_LOGIC", "(DATA)", " (DATA)_LOGIC", "(DATA)", "NOT_DATA_LOGIC", "NOT_(DATA)", "NOT_DATA_LOGIC", "(DATA)", "DATA_LOGIC", "NOT_(DATA)", "DATA_LOGIC", "(DATA)", "NOT_(DATA)_LOGIC", "NOT_DATA", "(DATA)_LOGIC", "NOT_DATA", "NOT_(DATA)_LOGIC", "DATA", "(DATA)_LOGIC", "DATA", "NOT_DATA_LOGIC", "NOT_DATA", "DATA_LOGIC", "NOT_DATA", "NOT_DATA_LOGIC", "LOGIC", "NOTT", "(DATA", "CLOSE", "(DATA", "OPEN",  "(BOOLEAN)", "(BOOLEANBASE)", "BOOLEANBASE", "(BOOLEAN", "CLOSE", "(BOOLEANBASE", "BOOLOPERATOR", "NOT_(DATA)_LOGIC", "NOT_(DATA)", "(DATA)_LOGIC", "NOT_DATA_LOGIC", "NOT_(DATA)", "(NOT", "VARIABLE)","NOT_VARIABLE", "(NOT VARIABLE)", "(NOT_VARIABLE)", "(NOT_VARIABLE","IST", "(VARIABLE", "ORANDT", "NONE", "COLON", "COMMA", "CLASS_VARIABLE_PARAM","SECCLASS","DEF_VARIABLE_PARAM", "STATEMENT_RETURN", "IFTAIL", "CLASS_VARIABLE", "PARAM", "CLASST", "(ARGUMENTSOFFUNC)", "WITH_FUNCTION","AS_VARIABLE:", "WITHT", "AS_VARIABLE", "AST", "DEF_VARIABLE", "DEFT", "FOR_VARIABLE", "FORT", "IN_SEQUENCE","IN", "SEQUENCE", "FOR_VARIABLE","IN_SEQUENCE", "SEQUENCE", "RANGE","R_PARAM", "(INT", "(INT,", "INT)", "(INT,INT,", "WHILET", "CONDITION", "BRANCH", "ELIFF", "ELSEF", "IFT","ELIFT", "ELSET", "FROMT"]

b = list(set(a))
print(b)

['OPEN', 'IN_SEQUENCE', '(NOT', 'PARAM', 'CLASS_VARIABLE', 'INT)', 'DEF', '(INT,', 'IFT', 'BOOLEAN', 'DATA', 'VARIABLE_ASSIGN', '(BOOLEAN)', 'ELIFF', 'INT', 'NONE', 'DATA_LOGIC', 'STRING', 'IF', 'IFTAIL', '(INT', ' NOT_DATA_LOGIC', 'CLASS', 'SECCLASS', 'OPENARGUMENTSOFFUNCCALL', 'DEF_VARIABLE', 'NOT_(DATA)', 'AS_VARIABLE:', 'IST', 'CONDITION', 'VARIABLE)', 'R_PARAM', '(VARIABLE)', '(NOT VARIABLE)', 'LOGIC', 'SEC', '(NOT_VARIABLE', 'DEFT', 'COMMA_DATA', '(ARGUMENTSOFFUNC)', 'CLASS_VARIABLE_PARAM', 'CLASST', '(ARGUMENTSOFFUNCCALL', 'FOR_VARIABLE_IN_SEQUENCE', ':CONTENTLOOP', 'CLOSE', 'DATANOSTRINGNONONE', 'VARIABLE', 'NOTT', 'WHILEFCONTENTLOOP', ' (DATA)_LOGIC', 'OPERATOR', 'IFF', 'DATANONONE', 'ASSIGN', 'IN', 'FROMT', 'FOR', 'CONTENTLOOP', '(NOT_VARIABLE)', 'ELSET', 'DEF_VARIABLE_PARAM', 'AST', '(BOOLEAN', 'STATEMENT_RETURN', 'COLON', '(BOOLEANBASE', 'WITH_FUNCTION_AS_VARIABLE:', 'STATEMENT', 'WHILET', '(DATA)', 'CONTINUE', 'RANGE', 'WITH_FUNCTION', 'FROM_IMPORT_VARIABLE', 'RETURN', 'PASS', 'WHILEF', 'ELSEF', '(DATA)_LOGIC', 'WITHT', 'NOT_DATA_LOGIC', 'VARIABLE_IS', 'LOOPFUNC', 'IMPORTT', 'COMMA_VARIABLE', '(DATA', 'NOT_DATA', 'AS', 'RET', '‘NOT_DATA_LOGIC', 'AS_VARIABLE', 'FORT', 'VALUE', 'BRANCH', 'WITH', 'ARGUMENTSOFFUNC', 'WHILE', 'TAIL', 'DATANOSTRINGNONONE_OPERATOR', 'BREAK', '(INT,INT,', 'NOT_(DATA)_LOGIC', 'SEQUENCE', 'COMMA', 'ASSIGNMENT', 'LOOPFUNCDEF', 'ORAND', 'IMPORT', 'NOT_VARIABLE', 'FROM', '(VARIABLE', '()', 'ELIFT', 'ORANDT', 'IMPORT_VARIABLE', 'ARGUMENTSOFFUNCCALL', '(ARGUMENTSOFFUNCCALL)', '(BOOLEANBASE)', 'BOOLEAN_ORAND', 'CLASS_VARIABLE_PARAMSECCLASS', 'BOOLEANBASE', 'FUNCTIONCALL', 'BOOLOPERATOR', 'IS', 'FOR_VARIABLE', '(DATA)_LOGIC DATA']